-- Create advanced frame
local advancedFrame = CreateFrame("Frame", "DeathRollAdvancedFrame", UIParent)
-- local advancedFrame = CreateFrame("Frame", "DeathRollAdvancedFrame", UIParent, "BackdropTemplate")
advancedFrame:SetSize(300, 200)
advancedFrame:SetPoint("LEFT", mainFrame, "RIGHT", 10, 0)
advancedFrame:SetBackdrop({
    bgFile = "Interface\\DialogFrame\\UI-DialogBox-Background",
    edgeFile = "Interface\\DialogFrame\\UI-DialogBox-Border",
    tile = true, tileSize = 32, edgeSize = 32,
    insets = { left = 11, right = 12, top = 12, bottom = 11 }
})
advancedFrame:SetBackdropColor(0, 0, 0, 1)

advancedFrame.title = advancedFrame:CreateFontString(nil, "OVERLAY")
advancedFrame.title:SetFontObject("GameFontHighlight")
advancedFrame.title:SetPoint("TOP", advancedFrame, "TOP", 0, -10)
advancedFrame.title:SetText("Advanced Wager")

-- Your wager input
local yourWagerInput = CreateFrame("EditBox", nil, advancedFrame, "InputBoxTemplate")
yourWagerInput:SetSize(200, 20)
yourWagerInput:SetPoint("TOP", advancedFrame, "TOP", 0, -40)
yourWagerInput:SetAutoFocus(false)
yourWagerInput:SetMaxLetters(100)
yourWagerInput:SetText("Your wager items")

-- Their wager input
local theirWagerInput = CreateFrame("EditBox", nil, advancedFrame, "InputBoxTemplate")
theirWagerInput:SetSize(200, 20)
theirWagerInput:SetPoint("TOP", yourWagerInput, "BOTTOM", 0, -20)
theirWagerInput:SetAutoFocus(false)
theirWagerInput:SetMaxLetters(100)
theirWagerInput:SetText("Their wager items")

-- Create table to hold dynamically added edit boxes
local dynamicEditBoxes = {}

-- Function to add new EditBox
local function addEditBox()
    local newEditBox = CreateFrame("EditBox", nil, advancedFrame, "InputBoxTemplate")
    newEditBox:SetSize(200, 20)
    local lastEditBox = dynamicEditBoxes[#dynamicEditBoxes] or theirWagerInput
    newEditBox:SetPoint("TOP", lastEditBox, "BOTTOM", 0, -20)
    newEditBox:SetAutoFocus(false)
    newEditBox:SetMaxLetters(100)
    newEditBox:SetText("Additional item")
    table.insert(dynamicEditBoxes, newEditBox)
    advancedFrame:SetHeight(advancedFrame:GetHeight() + 40)
end

-- Function to remove the last EditBox
local function removeEditBox()
    local lastEditBox = table.remove(dynamicEditBoxes)
    if lastEditBox then
        lastEditBox:Hide()
        lastEditBox:SetParent(nil)
        advancedFrame:SetHeight(advancedFrame:GetHeight() - 40)
    end
end

-- "+" button
local addButton = CreateFrame("Button", nil, advancedFrame, "UIPanelButtonTemplate")
addButton:SetSize(20, 20)
addButton:SetPoint("TOPRIGHT", advancedFrame, "TOPRIGHT", -10, -10)
addButton:SetText("+")
addButton:SetScript("OnClick", addEditBox)

-- "-" button
local removeButton = CreateFrame("Button", nil, advancedFrame, "UIPanelButtonTemplate")
removeButton:SetSize(20, 20)
removeButton:SetPoint("TOPRIGHT", addButton, "BOTTOMRIGHT", 0, -10)
removeButton:SetText("-")
removeButton:SetScript("OnClick", removeEditBox)

-- To the death button
local toTheDeathButton = CreateFrame("Button", nil, advancedFrame, "UIPanelButtonTemplate")
toTheDeathButton:SetSize(140, 40)
toTheDeathButton:SetPoint("TOP", theirWagerInput, "BOTTOM", 0, -20)
toTheDeathButton:SetText("To the death")
toTheDeathButton:SetNormalFontObject("GameFontNormalLarge")
toTheDeathButton:SetHighlightFontObject("GameFontHighlightLarge")

toTheDeathButton:SetScript("OnClick", function()
    -- Handle to the death logic here
end)

-- Function to handle item link insertion
local function handleItemLink(text)
    if ChatEdit_GetActiveWindow() then
        ChatEdit_InsertLink(text)
    elseif wagerInput:HasFocus() then
        wagerInput:Insert(text)
    elseif startInput:HasFocus() then
        startInput:Insert(text)
    elseif yourWagerInput:HasFocus() then
        yourWagerInput:Insert(text)
    elseif theirWagerInput:HasFocus() then
        theirWagerInput:Insert(text)
    else
        for _, editBox in ipairs(dynamicEditBoxes) do
            if editBox:HasFocus() then
                editBox:Insert(text)
                break
            end
        end
    end
end

hooksecurefunc("ChatEdit_InsertLink", handleItemLink)
